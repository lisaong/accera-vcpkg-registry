From 7f9a254015c977405957fb5b2b6e2a1895f0ca69 Mon Sep 17 00:00:00 2001
From: Kern Handa <kern.handa@gmail.com>
Date: Wed, 6 Oct 2021 11:09:31 -0700
Subject: [PATCH 3/3] Fix bad merge

---
 llvm/lib/Target/X86/X86ISelLowering.cpp | 24 ------------------------
 mlir/tools/mlir-tblgen/OpDocGen.cpp     |  6 +++---
 2 files changed, 3 insertions(+), 27 deletions(-)

diff --git a/llvm/lib/Target/X86/X86ISelLowering.cpp b/llvm/lib/Target/X86/X86ISelLowering.cpp
index 0ab595ae023d..7bdfd7c612c7 100644
--- a/llvm/lib/Target/X86/X86ISelLowering.cpp
+++ b/llvm/lib/Target/X86/X86ISelLowering.cpp
@@ -50199,30 +50199,6 @@ static SDValue matchPMADDWD_3(SelectionDAG &DAG, SDValue N0, SDValue N1,
     return pmaddwdResult;
 }
 
-static SDValue combineAddOrSubToHADDorHSUB(SDNode *N, SelectionDAG &DAG,
-                                           const X86Subtarget &Subtarget) {
-  EVT VT = N->getValueType(0);
-  SDValue Op0 = N->getOperand(0);
-  SDValue Op1 = N->getOperand(1);
-  bool IsAdd = N->getOpcode() == ISD::ADD;
-  assert((IsAdd || N->getOpcode() == ISD::SUB) && "Wrong opcode");
-
-  // If the output is narrower than an input, extract the low part of the input
-  // vector.
-  EVT OutVT16 = EVT::getVectorVT(*DAG.getContext(), MVT::i16,
-                               VT.getVectorNumElements() * 2);
-  if (OutVT16.bitsLT(In0.getValueType())) {
-    In0 = DAG.getNode(ISD::EXTRACT_SUBVECTOR, DL, OutVT16, In0,
-                      DAG.getIntPtrConstant(0, DL));
-  }
-  if (OutVT16.bitsLT(In1.getValueType())) {
-    In1 = DAG.getNode(ISD::EXTRACT_SUBVECTOR, DL, OutVT16, In1,
-                      DAG.getIntPtrConstant(0, DL));
-  }
-  return SplitOpsAndApply(DAG, Subtarget, DL, VT, { In0, In1 },
-                          PMADDBuilder);
-}
-
 static SDValue combineAdd(SDNode *N, SelectionDAG &DAG,
                           TargetLowering::DAGCombinerInfo &DCI,
                           const X86Subtarget &Subtarget) {
diff --git a/mlir/tools/mlir-tblgen/OpDocGen.cpp b/mlir/tools/mlir-tblgen/OpDocGen.cpp
index 40eecf6509f6..00fe20a55f53 100644
--- a/mlir/tools/mlir-tblgen/OpDocGen.cpp
+++ b/mlir/tools/mlir-tblgen/OpDocGen.cpp
@@ -61,8 +61,8 @@ static void emitNamedConstraint(const T &it, raw_ostream &os) {
   if (!it.name.empty())
     os << "| `" << it.name << "`";
   else
-    os << "| &laquo;unnamed&raquo;";
-  os << " | " << it.constraint.getDescription() << " |\n";
+    os << "&laquo;unnamed&raquo;";
+  os << " | " << it.constraint.getSummary() << " |\n";
 }
 
 //===----------------------------------------------------------------------===//
@@ -110,7 +110,7 @@ static void emitOpDoc(Operator op, raw_ostream &os) {
     for (const auto &it : op.getAttributes()) {
       StringRef storageType = it.attr.getStorageType();
       os << "| `" << it.name << "` | " << storageType << " | "
-         << it.attr.getDescription() << " |\n";
+         << it.attr.getSummary() << " |\n";
     }
   }
 
-- 
2.30.0.windows.1

